# Default configuration.
# Info for string values: leading/trailing whitespace will be stripped.
#   This also applies to stringlists (e.g. "1,2, 3" is equal to "1,2,3").

# The format of the times given in the table.
#
# Type: String in strftime format
time_format: "%H.%M"

# The names of the "headers" of the table and their respective weekday index.
#   Keys will be turned to all lowercase internally.
#   Weekday index between "0" and "6", where "0" stands for monday.
#   "h" is used for holidays. If "h" is given as an index,
#   holiday_location has to be set as well.
#
# Type: Mapping of string to list of char
header_values: {
  "montag - freitag": "0,1,2,3,4",
  "samstag": "5",
  "sonntag": "6",
  "sonn- und feiertag": "6,h",
}

# The country + subdivision (state/province) code used to get the holidays.
# See https://pypi.org/project/holidays/ for a list of possible values.
#
# Type: dict of string to string
holiday_code:
  country: "DE"
  subdivision: "BW"

# If a column does not hold any time data and begins with this identifier,
#   try to expand the given repeat interval. For example if a table contains
#   a column (B) containing "Alle 5 min.", this means between the times
#   of the column left (A) and right (C) of B, the times should be repeated
#   every 5 minutes. The repeat_identifier are used to identify these columns.
#
# Type: List of strings
repeat_identifier: [
  "alle",
]

# How to expand the repeating column, if the repeating times occur in a range.
#
# Type   : string. Either "cycle" and "mean".
# Example: "Alle 7-8 min." with "cycle" would alternate between using 7 and 8
#    minutes, while "mean" would always use 7.5 minutes.
repeat_strategy: "cycle"

# The minimum number of consecutive lines required, for something to be
#   recognized as a table.
#
# Type: int
min_table_rows: 5

# Which pages to consider for extraction. Defaults to 'all' for all pages.
#
# Type: String of comma-separated ints or ranges of ints, or 'all'.
# Example: "1-3,6,8-9" extracts the tables from the pages 1, 2, 3, 6, 8, 9.
pages: "all"

# Maximum vertical distance in pixel between two rows, to be considered on
#   the same table. Basically checks if:
#     ((y_max of first row) - (y_min of second row)) <= max_row_distance
#
# Type: int
max_row_distance: 3
